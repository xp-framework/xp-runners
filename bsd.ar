--3130:cgen:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.codegen.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3129:doclet:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.doclet.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3131:unittest:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.unittest.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3126:xar:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.xar.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3131:xcc:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.compiler.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--4259:xp:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
OPTIND=0
INCLUDE_PATH="."
TOOL=
if [ 0 = $# ] ; then
  TOOL="xp.runtime.ShowResource|usage.txt|255"
else
  for arg in "$@" ; do
    if [ ! -z "$INCLUDE_ARG" ] ; then
      INCLUDE_PATH="$arg$INCLUDE_ARG$INCLUDE_PATH" ; INCLUDE_ARG=""
      OPTIND=`expr $OPTIND + 2`
      continue
    fi
    case $arg in
      -v) # Display version
        TOOL="xp.runtime.Version"
        OPTIND=$(expr $OPTIND + 1)
        ;;
      -e) # Run source passed via command line
        TOOL="xp.runtime.Evaluate"
        OPTIND=$(expr $OPTIND + 1)
        ;;
      -w|-d) # Evaluate source and dump result
        TOOL="xp.runtime.Dump"
        ;;
      -r) # Reflect given class
        TOOL="xp.runtime.Reflect"
        OPTIND=$(expr $OPTIND + 1)
        ;;
      -cp) # Add class path
        INCLUDE_ARG=${PATHSEP}
        ;;
      -xar) # Run a xar
        TOOL="xp.runtime.Xar"
        OPTIND=$(expr $OPTIND + 1)
        ;;
      -*) # Any other arg
        echo "*** Invalid argument $arg" >&2
        exit 255
        ;;
      *) # First arg we find that does not begin with a "-"
        break
        ;;
    esac
  done
  shift $OPTIND
fi
base="$DIRNAME" RUNNER="class" INCLUDE=$INCLUDE_PATH xppath="$DIRNAME" ARGS=$TOOL IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3130:xpcli:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.command.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--3130:xpi:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
base="$DIRNAME" RUNNER="class" INCLUDE="." xppath="$DIRNAME" ARGS=xp.install.Runner IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
--4919:xpws:--
#!/bin/sh






PATHSEP=':'
DIRSEP='/'


if [ -L "$0" ] ; then
  link="$(readlink "$0")"
  case "$link" in
    /*) DIRNAME=$(dirname "$link") ;;                 # Absolute
    *) DIRNAME=$(dirname "$(dirname "$0")/$link") ;;  # Relative
  esac
else
  DIRNAME=$(dirname "$0")
fi

translate_path() {
  base="$1"
  path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib */
    ~*) path=$HOME$DIRSEP${path#"~"} ;; # ~/lib
    *) path=$base$DIRSEP$path ;; # lib, ../lib, ./classes
  esac




  echo $path

}

translate_paths() {
  base="$1"
  path="$2"

  translated=""
  IFS="$PATHSEP"
  for i in $path ; do
    translated="$translated$PATHSEP"$(translate_path "$base" "$i")
  done
  echo "${translated#$PATHSEP}"
}

locate() {
  path="$1"
  file="$2"
  expect=$3

  IFS="$PATHSEP"
  for i in $path ; do
    qualified="$i/$file"
    if [ -e "$qualified" ] ; then
      echo "$qualified"
      if [ $expect = 1 ] ; then return ; fi
    fi
  done
  if [ $expect = 1 ] ; then echo "*** Failed to locate $file in $path" >&2 ; fi
  echo ""
}
RUNNER=web
TOOL=
INCLUDE_PATH="."
SERVER_PROFILE=dev
WEB_ROOT=.
WEB_CONFIG=etc
while [ $# != 0 ]; do
  case $1 in
    -p)
      SERVER_PROFILE=$2
      shift 2
      ;;
    -r)
      DOCUMENT_ROOT=$2
      if [ ! -d "$DOCUMENT_ROOT" ] ; then
        echo "*** Document root $DOCUMENT_ROOT does not exist, exiting." >&2
        exit 3
      fi
      shift 2
      ;;
    -c)
      WEB_CONFIG=$2
      shift 2
      ;;
    -w)
      WEB_ROOT=$2
      shift 2
      ;;
    -cp)
      INCLUDE_PATH=${INCLUDE_PATH}${PATHSEP}$2
      shift 2
      ;;
    -i)
      RUNNER=class
      TOOL='xp.scriptlet.Inspect|${WEB_ROOT}|${WEB_CONFIG}|${SERVER_PROFILE}|${ADDR}'
      shift 1
      ;;
    -?)
      RUNNER=class
      TOOL="xp.scriptlet.Usage|xpws.txt"
      WEB_CONFIG=?
      break
      ;;
    *:*)
      server=${1%:*}
      port=${1#*:}
      shift 1
      break
      ;;
    *)
      server=$1
      shift 1
      break
      ;;
  esac
done
ADDR=${server-localhost}:${port-8080}
eval 'TOOL="'$TOOL'"'
base="$DIRNAME" RUNNER=$RUNNER INCLUDE=$INCLUDE_PATH xppath="$DIRNAME" ARGS=$TOOL IFS="|";
ifs="|"
if [ "" = "$USE_XP" ] ; then
  unset USE_XP
else
  USE_XP=$(translate_paths "." "$USE_XP")
fi
RT_ARG=""
dkeys=""
vkeys=""
for i in "." "$HOME/.xp" "$base" ; do
  if [ -e "$i/xp.ini" ] ; then
    section=default
    while read line || [ -n "$line" ] ; do
      case "$section.$line" in
        default.use=*)
          USE_XP=${USE_XP-$(translate_paths "$i" "${line#*=}")}
        ;;
        default.rt=*)
          XP_RT=${XP_RT-${line#*=}}
        ;;
        *.\;*)
          ;;
        *.\[*\])
          section=${line#\[}
          section=${section%]}
        ;;
        runtime.extension=*|runtime@$XP_RT.extension=*)
          RT_ARG="$RT_ARG${ifs}-dextension=${line#*=}"
        ;;
        runtime.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          dkeys="$dkeys${ifs}$key"
          eval "d$key"=${line#*=}
        ;;
        runtime@$XP_RT.*=*)
          key=${line%=*}
          key=$(echo $key | sed 's/\./__/g')
          vkeys="$vkeys${ifs}$key"
          eval "v$key"=${line#*=}
        ;;
      esac
    done < "$i/xp.ini"
  fi
done
for k in $vkeys ; do
  eval "d$k=\$v$k"
  dkeys="$dkeys${ifs}$k"
done
for k in $dkeys ; do
  if [ $k ] ; then
    eval "v=\$d$k"
    if [ default = $k ] ; then
      XP_EXE=${XP_EXE-$v}
    else
      RT_ARG="$RT_ARG${ifs}-d$(echo $k | sed 's/__/./g')=\"$v\""
    fi
  fi
done
XP_EXE=${XP_EXE-php}
if [ "" = "$USE_XP" ] ; then
  echo "*** Cannot determine use_xp setting from [ ENV $HOME/.xp/xp.ini $base/xp.ini ]" >&2
  exit 255
fi
args="-C${ifs}-q${ifs}-dinclude_path=\".$PATHSEP$USE_XP$PATHSEP$PATHSEP$INCLUDE\"${ifs}-dmagic_quotes_gpc=0$RT_ARG"
tool=$(locate "$USE_XP" "tools/"${RUNNER}".php" 1)
if [ ! -d /proc/1 ] ; then
  XP_CMDLINE="$args${ifs}$tool${ifs}${ARGS}"
  export XP_CMDLINE
fi
export XP_EXE
IFS="|"
if [ $WEB_CONFIG != "?" ] && [ ! -e "$WEB_CONFIG/web.ini" ] ; then
  echo "*** Cannot find the web configuration web.ini in $WEB_CONFIG/, exiting." >&2
  exit 3
fi
if [ $RUNNER = class ] ; then
  ${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
else
  if [ "" = "$DOCUMENT_ROOT" ] ; then
    if [ -d "$WEB_ROOT/static" ] ; then
      DOCUMENT_ROOT="$WEB_ROOT/static"
    else
      DOCUMENT_ROOT=.
    fi
  else
    DOCUMENT_ROOT=${DOCUMENT_ROOT%/}
  fi
  export WEB_ROOT
  export SERVER_PROFILE
  export DOCUMENT_ROOT
  ${XP_EXE}${ifs}-S${ifs}${ADDR}${ifs}-t${ifs}"${DOCUMENT_ROOT}"${ifs}-duser_dir="$WEB_CONFIG"${ifs}${args}${ifs}$tool ${ARGS} "$@" &
  PID=$!
  echo "[xpws-$SERVER_PROFILE#$PID] running $ADDR @ $WEB_ROOT - Press <Enter> to exit"
  read enter
  echo "[xpws-$SERVER_PROFILE#$PID] shutting down..."
  kill -TERM $PID
fi
--483:xprt-update.sh:--
#!/bin/sh

DIR=$(dirname "$0")
BIN=$(realpath "$DIR")

if [ -z $TEMP ] ; then
  TARGET=/tmp/.xp
else
  TARGET=$TEMP/.xp
fi

echo "===> Downloading bsd runners to $TARGET"
xpi download bin/bsd $TARGET
if [ $? != 0 ] ; then
  exit
fi

echo "===> Extracting into $BIN"
i=0
for e in `ls -1 $TARGET/*` ; do
  (head -1 $e | grep '^#!/bin/sh' >/dev/null) && chmod +x $e
  mv $e $BIN
  i=`expr $i + 1`
done
echo "$i file(s) copied"

rmdir $TARGET
echo "===> Done, runners have been updated"
