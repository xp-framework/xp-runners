#include <common.in>

RUNNER=web
TOOL=
START='-S${ifs}${ADDR}${ifs}-t${ifs}"${DOCUMENT_ROOT}"${ifs}-duser_dir="$WEB_CONFIG"${ifs}'
INCLUDE_PATH="."
SERVER_PROFILE=dev
WEB_ROOT=.
WEB_CONFIG=
ACTION=serve
PIDFILE=".xpws.pid"
LOGFILE="/dev/null"

while [ $# != 0 ]; do
  case $1 in
    -p)
      SERVER_PROFILE=$2
      shift 2
      ;;
    -r)
      DOCUMENT_ROOT=$2
      if [ ! -d "$DOCUMENT_ROOT" ] ; then
        echo "*** Document root $DOCUMENT_ROOT does not exist, exiting." >&2
        exit 3
      fi
      shift 2
      ;;
    -c)
      if [ "-" = "$2" ] ; then
        WEB_CONFIG=-
      elif [ -e "$2/web.ini" ] ; then
        WEB_CONFIG="$2/web.ini"
      else
        WEB_CONFIG=":$2"
      fi
      shift 2
      ;;
    -w)
      WEB_ROOT=$2
      shift 2
      ;;
    -cp)
      INCLUDE_PATH=${INCLUDE_PATH}${PATHSEP}$2
      shift 2
      ;;
    -m)
      if [ "develop" = $2 ] ; then
        RUNNER=web
      else
        RUNNER=class
        START=
        TOOL='xp.scriptlet.Server|${WEB_ROOT}|${WEB_CONFIG}|${SERVER_PROFILE}|${ADDR}|'$2
      fi
      shift 2
      ;;
    -P)
      PIDFILE=$2
      shift 2
      ;;
    -L)
      LOGFILE=$2
      touch $LOGFILE || exit
      shift 2
      ;;
    start|stop|status|serve)
      ACTION=$1
      shift 1
      ;;
    info|-i)
      RUNNER=class
      START=@immediate
      TOOL='xp.scriptlet.Inspect|${WEB_ROOT}|${WEB_CONFIG}|${SERVER_PROFILE}|${ADDR}'
      shift 1
      ;;
    -?)
      RUNNER=class
      START=@immediate
      TOOL="xp.scriptlet.Usage|xpws.txt"
      break
      ;;
    *:*)
      server=${1%:*}
      port=${1#*:}
      shift 1
      ;;
    *)
      server=$1
      shift 1
      ;;
  esac
done

if [ "" = "$WEB_CONFIG" ] ; then
  if [ -e ./etc/web.ini ] ; then
    WEB_CONFIG=./etc
  else
    WEB_CONFIG=-
  fi
fi

ADDR=${server-localhost}:${port-8080}
eval 'TOOL="'$TOOL'"'
EXEC($RUNNER, $INCLUDE_PATH, $TOOL)

#include <instance.in>

if [ $START = "@immediate" ] ; then
  ${XP_EXE}${ifs}${args}${ifs}$tool ${ARGS} "$@"
else
  if [ "" = "$DOCUMENT_ROOT" ] ; then
    if [ -d "$WEB_ROOT/static" ] ; then
      DOCUMENT_ROOT="$WEB_ROOT/static"
    else
      DOCUMENT_ROOT=.
    fi
  else
    DOCUMENT_ROOT=${DOCUMENT_ROOT%/}
  fi

  if [ "-" = "$WEB_CONFIG" ] ; then
    echo "No configuration given, serving static content from $DOCUMENT_ROOT"
  fi

  export WEB_ROOT
  export SERVER_PROFILE
  export DOCUMENT_ROOT

  eval 'START="'$START'"'

  case $ACTION in
    serve)
      ${XP_EXE}${ifs}${START}${args}${ifs}$tool ${ARGS} "$@" &
      PID=$!

      echo "[xpws-$SERVER_PROFILE#$PID] running $ADDR @ $WEB_ROOT - Press <Enter> to exit"
      read enter
      echo "[xpws-$SERVER_PROFILE#$PID] shutting down..."
      kill -TERM $PID
      ;;

    start)
      if [ -f "$PIDFILE" ] ; then
        echo "*** xpws already running"
        exit 255
      else
        ${XP_EXE}${ifs}${START}${args}${ifs}$tool ${ARGS} "$@" 1>"$LOGFILE" 2>&1 &
        PID=$!

        echo "[xpws-$SERVER_PROFILE#$PID] running $ADDR @ $WEB_ROOT - Use xpws stop to end"
        echo $SERVER_PROFILE#$PID > "$PIDFILE"
      fi
      ;;

    stop)
      if [ -f "$PIDFILE" ] ; then
        running=$(cat "$PIDFILE")
        PID=${running#*'#'}
        echo "[xpws-$running] shutting down..."
        kill -TERM $PID
        rm "$PIDFILE"
      else
        echo "*** xpws not running"
        exit 255
      fi
      ;;

    status)
      if [ -f "$PIDFILE" ] ; then
        running=$(cat "$PIDFILE")
        echo "[xpws-$running] running - $PIDFILE"
      else
        echo "xpws not running"
      fi
      ;;
  esac
fi